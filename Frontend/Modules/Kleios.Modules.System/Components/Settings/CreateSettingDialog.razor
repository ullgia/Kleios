@using Kleios.Shared.Models
@using Kleios.Shared.Settings
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudForm @ref="_form" @bind-IsValid="@_isValid">
            <MudGrid>
                <MudItem xs="12">
                    <MudTextField @bind-Value="_model.Key" 
                                  Label="Chiave" 
                                  Required="true"
                                  RequiredError="Chiave obbligatoria"
                                  Variant="Variant.Outlined"
                                  HelperText="Es: Email:SmtpPort, Jwt:SecretKey"
                                  Adornment="Adornment.Start"
                                  AdornmentIcon="@Icons.Material.Filled.Key" />
                </MudItem>
                
                <MudItem xs="12">
                    <MudSelect T="string" 
                               @bind-Value="_model.Category" 
                               Label="Categoria"
                               Variant="Variant.Outlined"
                               Required="true"
                               Adornment="Adornment.Start"
                               AdornmentIcon="@Icons.Material.Filled.Folder">
                        @foreach (var category in ExistingCategories)
                        {
                            <MudSelectItem T="string" Value="@category">@category</MudSelectItem>
                        }
                        <MudSelectItem T="string" Value="@_newCategory">
                            <em>Nuova categoria...</em>
                        </MudSelectItem>
                    </MudSelect>
                </MudItem>
                
                @if (_model.Category == _newCategory)
                {
                    <MudItem xs="12">
                        <MudTextField @bind-Value="_customCategory" 
                                      Label="Nome Nuova Categoria" 
                                      Required="true"
                                      Variant="Variant.Outlined" />
                    </MudItem>
                }
                
                <MudItem xs="12">
                    <MudSelect T="string" 
                               @bind-Value="_model.DataType" 
                               Label="Tipo di Dato"
                               Variant="Variant.Outlined"
                               Required="true"
                               Adornment="Adornment.Start"
                               AdornmentIcon="@Icons.Material.Filled.DataObject">
                        <MudSelectItem T="string" Value="@("String")">Testo</MudSelectItem>
                        <MudSelectItem T="string" Value="@("Integer")">Numero Intero</MudSelectItem>
                        <MudSelectItem T="string" Value="@("Boolean")">Booleano (Sì/No)</MudSelectItem>
                        <MudSelectItem T="string" Value="@("Password")">Password</MudSelectItem>
                        <MudSelectItem T="string" Value="@("Json")">JSON</MudSelectItem>
                        <MudSelectItem T="string" Value="@("Url")">URL</MudSelectItem>
                    </MudSelect>
                </MudItem>
                
                <MudItem xs="12">
                    @if (_model.DataType == "Boolean")
                    {
                        <MudSwitch @bind-Value="_boolValue" 
                                   Label="Valore" 
                                   Color="Color.Primary" />
                    }
                    else if (_model.DataType == "Json")
                    {
                        <MudTextField @bind-Value="_model.Value" 
                                      Label="Valore (JSON)" 
                                      Lines="5"
                                      Variant="Variant.Outlined"
                                      HelperText="Inserisci un JSON valido" />
                    }
                    else if (_model.DataType == "Password")
                    {
                        <MudTextField @bind-Value="_model.Value" 
                                      Label="Valore" 
                                      InputType="InputType.Password"
                                      Variant="Variant.Outlined" />
                    }
                    else
                    {
                        <MudTextField @bind-Value="_model.Value" 
                                      Label="Valore" 
                                      Variant="Variant.Outlined" />
                    }
                </MudItem>
                
                <MudItem xs="12">
                    <MudTextField @bind-Value="_model.Description" 
                                  Label="Descrizione" 
                                  Lines="2"
                                  Variant="Variant.Outlined"
                                  HelperText="Descrizione dell'impostazione" />
                </MudItem>
                
                <MudItem xs="12">
                    <MudStack Row="true" Spacing="2">
                        <MudSwitch @bind-Value="_model.IsRequired" 
                                   Label="Obbligatorio" 
                                   Color="Color.Warning" />
                        <MudSwitch @bind-Value="_model.IsReadOnly" 
                                   Label="Sola lettura" 
                                   Color="Color.Default" />
                    </MudStack>
                </MudItem>
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Annulla</MudButton>
        <MudButton Color="Color.Primary" 
                   Variant="Variant.Filled" 
                   OnClick="Submit"
                   Disabled="@(!_isValid || _saving)">
            @if (_saving)
            {
                <MudProgressCircular Class="mr-2" Size="Size.Small" Indeterminate="true" />
            }
            Crea Impostazione
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] 
    IMudDialogInstance MudDialog { get; set; } = null!;
    
    [Parameter]
    public List<string> ExistingCategories { get; set; } = new();
    
    private MudForm _form = null!;
    private bool _isValid;
    private bool _saving;
    private CreateSettingRequest _model = new() { Key = "", DataType = "String", Category = "General" };
    private const string _newCategory = "___NEW___";
    private string _customCategory = string.Empty;
    private bool _boolValue = false;

    protected override void OnInitialized()
    {
        if (ExistingCategories.Any())
        {
            _model.Category = ExistingCategories.First();
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task Submit()
    {
        await _form.Validate();
        
        if (!_isValid)
        {
            Snackbar.Add("Correggi gli errori nel form", Severity.Warning);
            return;
        }

        if (string.IsNullOrWhiteSpace(_model.Key))
        {
            Snackbar.Add("La chiave è obbligatoria", Severity.Error);
            return;
        }

        // Gestisci nuova categoria
        if (_model.Category == _newCategory)
        {
            if (string.IsNullOrWhiteSpace(_customCategory))
            {
                Snackbar.Add("Inserisci il nome della nuova categoria", Severity.Error);
                return;
            }
            _model.Category = _customCategory;
        }

        // Converti valore booleano
        if (_model.DataType == "Boolean")
        {
            _model.Value = _boolValue.ToString().ToLower();
        }

        _saving = true;
        MudDialog.Close(DialogResult.Ok(_model));
    }
}
