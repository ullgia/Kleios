@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider

<style>
    .not-authorized-style{
        height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        background: linear-gradient(135deg, #3a0647 0%, rgb(5, 39, 103) 100%);
        color: white;
        font-size: 1.5rem;
        font-weight: bold;
        text-align: center;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        margin: 0 auto;

    }

    .app-bar{
        background: linear-gradient(135deg, #3a0647 0%, rgb(5, 39, 103) 100%);
        color: white;
        font-size: 1.5rem;

    }

    .nav-bar{
        background: linear-gradient(135deg, #3a0647 0%, rgb(5, 39, 103) 100%);
        color: white;
    }

    .mud-nav-link-text{
        color:white;
        padding-top:10px;
    }
</style>
<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudPopoverProvider />
<MudLayout>
    <AuthorizeView>
        <NotAuthorized>
            <div class="not-authorized-style">
                <MudPaper Elevation="25" Square="false" Class="pa-8" Width="500px" MaxWidth="500px">
                    @Body
                </MudPaper>
            </div>

        </NotAuthorized>
        <Authorized>
            <MudAppBar Elevation="1" Class="app-bar">
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
                <MudText Typo="Typo.h6" Class="ml-3">Kleios</MudText>
                <MudSpacer />

                <MudMenu Icon="@Icons.Material.Filled.Person" Color="Color.Inherit" direction="Direction.Bottom" offsetY="true">
                    <MudText Typo="Typo.body1" Class="px-4 py-2">@_username</MudText>
                    <MudDivider />
                </MudMenu>
            </MudAppBar>

            <MudDrawer @bind-Open="_drawerOpen" Class="nav-bar" ClipMode="DrawerClipMode.Always" Elevation="2">
                <NavMenu />
            </MudDrawer>

            <MudMainContent>
                <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="my-4 pt-4">
                    @Body
                </MudContainer>
            </MudMainContent>
        </Authorized>
    </AuthorizeView>
</MudLayout>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private bool _drawerOpen = true;
    private string _username = "";


    protected override async Task OnInitializedAsync()
    {
        var authentication = await AuthenticationStateProvider.GetAuthenticationStateAsync();
    
        var user = authentication.User;
        _username = user.Identity?.Name ?? string.Empty;
    }


    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }


}
