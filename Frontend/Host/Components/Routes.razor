@using System.Reflection
@using Microsoft.AspNetCore.Components.Authorization

<Router AppAssembly="typeof(Program).Assembly" AdditionalAssemblies="[typeof(Kleios.Modules.Auth._Imports).Assembly,typeof(Kleios.Modules.System._Imports).Assembly]">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(Layout.MainLayout)">
            <NotAuthorized>
                @if (context.User.Identity?.IsAuthenticated != true)
                {
                    <RedirectToLogin />
                }
                else
                {
                    <MudContainer Class="d-flex flex-column align-center justify-center" Style="height: 70vh;">
                        <MudText Typo="Typo.h4" Align="Align.Center" Class="mb-4">Accesso negato</MudText>
                        <MudText Typo="Typo.body1" Align="Align.Center" Class="mb-6">Non hai i permessi necessari per accedere a questa pagina.</MudText>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Href="/">Torna alla Home</MudButton>
                    </MudContainer>
                }
            </NotAuthorized>
            <Authorizing>
                <MudContainer Class="d-flex justify-center align-center" Style="height: 70vh;">
                    <MudProgressCircular Indeterminate="true" Size="Size.Medium" />
                    <MudText Class="ml-3">Verificando l'accesso...</MudText>
                </MudContainer>
            </Authorizing>
        </AuthorizeRouteView>
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Non trovato</PageTitle>
        <LayoutView Layout="@typeof(Layout.MainLayout)">
            <MudContainer Class="d-flex flex-column align-center justify-center" Style="height: 70vh;">
                <MudText Typo="Typo.h4" Align="Align.Center" Class="mb-4">Oops! Pagina non trovata.</MudText>
                <MudText Typo="Typo.body1" Align="Align.Center" Class="mb-6">La pagina che stai cercando non esiste o non è disponibile.</MudText>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Href="/">Torna alla Home</MudButton>
            </MudContainer>
        </LayoutView>
    </NotFound>
</Router>

@code {
    private static Assembly[] GetAdditionalAssemblies()
    {
        // Includi tutte le assembly dei moduli
        var assemblies = AppDomain.CurrentDomain.GetAssemblies()
            .Where(a => a.FullName != null && 
                        (a.FullName.StartsWith("Kleios.Modules") || 
                         a.FullName.StartsWith("Kleios.Frontend")))
            .ToArray();
        
        return assemblies;
    }
}

@code {
    private class RedirectToLogin : ComponentBase
    {
        [Inject]
        private NavigationManager NavigationManager { get; set; } = default!;

        protected override void OnInitialized()
        {
            NavigationManager.NavigateTo("/Account/login", forceLoad: false);
        }
    }
}
